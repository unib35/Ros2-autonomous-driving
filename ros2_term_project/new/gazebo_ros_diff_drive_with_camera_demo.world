<?xml version="1.0"?>
<!--
  Gazebo ROS differential drive plugin demo

  Try sending commands:

    ros2 topic pub /demo/cmd_demo geometry_msgs/Twist '{linear: {x: 1.0}}' -1

    ros2 topic pub /demo/cmd_demo geometry_msgs/Twist '{angular: {z: 0.1}}' -1

  Try listening to odometry:

    ros2 topic echo /demo/odom_demo

  Try listening to TF:

    ros2 run tf2_ros tf2_echo odom_demo chassis

    ros2 run tf2_ros tf2_echo chassis right_wheel

    ros2 run tf2_ros tf2_echo chassis left_wheel
-->
<sdf version="1.6">
  <world name="default">

<!--
    <include>
      <uri>model://ground_plane</uri>
    </include>
-->


<model name="ground">
      <pose>0 0 0 0 0 0</pose>
      <static>1</static>
      <link name="ground">
        <collision name="ground_coll">
          <geometry>
            <box>
              <size>30 30 .05</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
          </surface>
        </collision>
        <visual name="ground_vis">
          <geometry>
            <box>
              <size>30 30 .05</size>
            </box>
          </geometry>
          <material>
            <script>
              <uri> ./course.material </uri>  <!-- file://course.material -->
              <name>course</name>
            </script>
          </material>
        </visual>
      </link>
    </model>

    <include>
      <uri>model://sun</uri>
    </include>

    <model name='vehicle'>
      <!-- my_course1.png: -5.2 0 0.5 0 0 -1.57 -->
      <!-- my_course2.png: -8.2 0 0.5 0 0 -1.57 -->
      <!-- course.png: 0 -6.5 0.5 0 0 0.18 -->
      <!-- yaw: 1.57 rad = 90 degrees, 0.18 rad = 10.3132 degrees -->
      <pose>-8.2 0 0.5 0 0 -1.57</pose>

      <link name='chassis'>
        <pose>-0.151427 -0 0.175 0 -0 0</pose>
        <inertial>
          <mass>1.14395</mass>
          <inertia>
            <ixx>0.126164</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.416519</iyy>
            <iyz>0</iyz>
            <izz>0.481014</izz>
          </inertia>
        </inertial>
        <visual name='visual'>
          <geometry>
            <box>
              <size>2.01142 1 0.568726</size>
            </box>
          </geometry>
        </visual>
        <collision name='collision'>
          <geometry>
            <box>
              <size>2.01142 1 0.568726</size>
            </box>
          </geometry>
        </collision>
      </link>

      <link name='left_wheel'>
        <pose>0.554283 0.625029 -0.025 -1.5707 0 0</pose>
        <inertial>
          <mass>2</mass>
          <inertia>
            <ixx>0.145833</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.145833</iyy>
            <iyz>0</iyz>
            <izz>0.125</izz>
          </inertia>
        </inertial>
        <visual name='visual'>
          <geometry>
            <sphere>
              <radius>0.3</radius>
            </sphere>
          </geometry>
        </visual>
        <collision name='collision'>
          <geometry>
            <sphere>
              <radius>0.3</radius>
            </sphere>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
                <slip1>0</slip1>
                <slip2>0</slip2>
              </ode>
            </friction>
            <contact>
              <ode>
                <soft_cfm>0</soft_cfm>
                <soft_erp>0.2</soft_erp>
                <kp>1e+13</kp>
                <kd>1</kd>
                <max_vel>0.01</max_vel>
                <min_depth>0.01</min_depth>
              </ode>
            </contact>
          </surface>
        </collision>
      </link>

      <link name='right_wheel'>
        <pose>0.554282 -0.625029 -0.025 -1.5707 0 0</pose>
        <inertial>
          <mass>2</mass>
          <inertia>
            <ixx>0.145833</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.145833</iyy>
            <iyz>0</iyz>
            <izz>0.125</izz>
          </inertia>
        </inertial>
        <visual name='visual'>
          <geometry>
            <sphere>
              <radius>0.3</radius>
            </sphere>
          </geometry>
        </visual>
        <collision name='collision'>
          <geometry>
            <sphere>
              <radius>0.3</radius>
            </sphere>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
                <slip1>0</slip1>
                <slip2>0</slip2>
              </ode>
            </friction>
            <contact>
              <ode>
                <soft_cfm>0</soft_cfm>
                <soft_erp>0.2</soft_erp>
                <kp>1e+13</kp>
                <kd>1</kd>
                <max_vel>0.01</max_vel>
                <min_depth>0.01</min_depth>
              </ode>
            </contact>
          </surface>
        </collision>
      </link>

      <link name='caster'>
        <pose>-0.957138 -0 -0.125 0 -0 0</pose>
        <inertial>
          <mass>1</mass>
          <inertia>
            <ixx>0.1</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.1</iyy>
            <iyz>0</iyz>
            <izz>0.1</izz>
          </inertia>
        </inertial>
        <visual name='visual'>
          <geometry>
            <sphere>
              <radius>0.2</radius>
            </sphere>
          </geometry>
        </visual>
        <collision name='collision'>
          <geometry>
            <sphere>
              <radius>0.2</radius>
            </sphere>
          </geometry>
        </collision>
      </link>

      <joint name='left_wheel_joint' type='revolute'>
        <parent>chassis</parent>
        <child>left_wheel</child>
        <axis>
          <xyz>0 0 1</xyz>
          <limit>
            <lower>-1.79769e+308</lower>
            <upper>1.79769e+308</upper>
          </limit>
        </axis>
      </joint>

      <joint name='right_wheel_joint' type='revolute'>
        <parent>chassis</parent>
        <child>right_wheel</child>
        <axis>
          <xyz>0 0 1</xyz>
          <limit>
            <lower>-1.79769e+308</lower>
            <upper>1.79769e+308</upper>
          </limit>
        </axis>
      </joint>

      <joint name='caster_wheel' type='ball'>
        <parent>chassis</parent>
        <child>caster</child>
      </joint>
      
      <link name="camera_link">
      <pose>0.8 0 0.5 0 0 0</pose>
          <visual name='visual'>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
        </visual>
      </link>

        <link name="camera_rgb_optical_frame">
            <inertial>
                <pose>0 0 0 0 0 0</pose>  <!-- 0.076 0.0 0.093 0 0 0 -->
                <inertia>
                    <ixx>0.001</ixx>
                    <ixy>0.000</ixy>
                    <ixz>0.000</ixz>
                    <iyy>0.001</iyy>
                    <iyz>0.000</iyz>
                    <izz>0.001</izz>
                </inertia>
                <mass>0.035</mass>
            </inertial>

            <pose>0.8 0 0.5 0 0.1745 0</pose>
            <sensor name="camera1" type="camera">
                <always_on>true</always_on>
                <visualize>true</visualize>
                <update_rate>10</update_rate>
                <camera name="picam">
                    <horizontal_fov>1.085595</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.03</near>
                        <far>100</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame.
                              That pixel's noise value is added to each of its color
                              channels, which at that point lie in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_driver" filename="libgazebo_ros_camera.so">
                    <!-- ros -->
                        <!-- <namespace>test_cam</namespace> not used -->
                        <!-- <remapping>image_raw:=image_demo</remapping> not used  -->
                        <!-- <remapping>camera_info:=camera_info_demo</remapping> not used  -->
                    <!-- /ros -->
                    <!-- camera_name>omit so it defaults to sensor name</camera_name not used -->
                    <!-- frame_name>omit so it defaults to link name</frameName not used -->
                    <!-- <hack_baseline>0.07</hack_baseline>  not used -->
                </plugin>
            </sensor>
        </link>

        <joint name="camera_joint" type="fixed">
            <parent>chassis</parent>
            <child>camera_link</child>
            <pose>0.0 0 0.0 0 0 0</pose>
            <axis>
                <xyz>0 0 1</xyz>
            </axis>
        </joint>

        <joint name="camera_rgb_joint" type="fixed">
            <parent>camera_link</parent>
            <child>camera_rgb_optical_frame</child>
            <pose>0 0 0 0 0 0</pose>  <!-- 0.003 0.011 0.009 0 0 0 -->
            <axis>
                <xyz>0 0 1</xyz>
            </axis>
        </joint>
        
        

      <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>

        <ros>
          <namespace>/demo</namespace>
          <remapping>cmd_vel:=cmd_demo</remapping>
          <remapping>odom:=odom_demo</remapping>
        </ros>

        <!-- wheels -->
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>

        <!-- kinematics -->
        <wheel_separation>1.25</wheel_separation>
        <wheel_diameter>0.6</wheel_diameter>

        <!-- limits -->
        <max_wheel_torque>20</max_wheel_torque>
        <max_wheel_acceleration>1.0</max_wheel_acceleration>

        <!-- output -->
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <publish_wheel_tf>true</publish_wheel_tf>

        <odometry_frame>odom_demo</odometry_frame>
        <robot_base_frame>chassis</robot_base_frame>

      </plugin>



        <!-- Hokuyo Laser -->
        <link name="hokuyo_link">
            <pose>0.8 0 0.55  0 0 0</pose>
            <inertial>
                <inertia>
                    <ixx>1e-6</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>1e-6</iyy>
                    <iyz>0</iyz>
                    <izz>1e-6</izz>
                </inertia>
                
                    <mass>1e-5</mass>
                </inertial>
                <collision name="collision">
                    <pose>0 0 0.5 0 0 0</pose>
                    <geometry>
                        <box>
                            <size>0.1 0.1 0.1</size>
                        </box>
                    </geometry>
                </collision>
                <visual name="visual">
                    <geometry>
                    	<mesh>
                    	    <uri>model://hokuyo/meshes/hokuyo.dae</uri>
                        </mesh>
                    </geometry>
                </visual>

                <sensor name="laser" type="ray">
                    <pose>0.01 0 0.0175 0 -0 0</pose>
                    <ray>
                        <scan>
                            <horizontal>
                                <samples>320</samples>
                                <resolution>5</resolution>  <!-- default: 1 -->
                                <min_angle>-1.00</min_angle> <!-- 0.1 to 0.2, 0.13 -->
                                <max_angle>1.00</max_angle>
                            </horizontal>
                        </scan>
                        <range>
                            <min>0.08</min>
                            <max>8</max>
                            <resolution>0.2</resolution>
                        </range>
                    </ray>

                    <plugin name="laser" filename="libgazebo_ros_ray_sensor.so">
                        <ros>
                            <!-- <namespace>test_cam</namespace> -->
                            <!-- remapping>out:=scan</remapping -->
                            <remapping>~/out:=scan</remapping>
                            <!-- <remapping>camera_info:=camera_info_demo</remapping> -->
                        </ros>

                        <frame_name>laser_frame</frame_name>
                        <output_type>sensor_msgs/LaserScan</output_type>
                    </plugin>
                    <always_on>1</always_on>
                    <update_rate>5</update_rate>  <!-- 10 -> 2 -->
                    <visualize>1</visualize>
                </sensor>
            </link>

            <joint name="hokuyo_joint" type="revolute">
                <parent>chassis</parent>
                <child>hokuyo_link</child>
                <axis>
                    <xyz>0 1 0</xyz>
                    <limit>
                        <upper>0</upper>
                        <lower>0</lower>
                    </limit>
                </axis>
            </joint>
            </model>
  </world>
</sdf>
